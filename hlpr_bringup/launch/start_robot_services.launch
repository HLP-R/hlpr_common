<?xml version="1.0"?>
<launch>

    <!-- Global flags to turn things on and off -->
    <!-- Note: for the standard vector urdf, sent any urdf flags to false -->
    <arg name="poli_urdf" default="false"/> <!-- Sets what URDF to use -->
    <arg name="prentice_urdf" default="false"/> <!-- DO NOT USE YET: Sets what URDF to use -->
    <arg name="verbose" default="false"/> <!-- Global verbose flag -->
    <arg name="sim" default="true"/> <!-- Simulation flag-->

    <!-- Navigation -->
    <arg name="navigation" default="true"/>
    <arg name="nav_map" default="simulation_room"/>
    <arg name="nav_rviz" default="true"/>

    <!-- Arm and Gripper Drivers -->
    <arg name="jaco_arm" default="true"/>
    <arg name="gripper_actions" default="false"/>
    <arg name="pub_eef" default="true"/>
    <arg name="eef_link" default="/right_ee_link"/>

    <!-- Moveit packages -->
    <arg name="jaco_moveit" default="false"/>
    <arg name="use_octomap" default="false"/>
    <arg name="jaco_moveit_wrapper" default="false"/>
    <arg name="jaco_primitive_actions" default="false"/>
    <arg name="jaco_common_actions" default="false"/>
   
    <!-- Speech internal listener related -->
    <arg name="speech" default="true"/> <!-- Turns ALL speech on and off includes input-->
    <arg name="speech_config_file" default="$(find hlpr_speech_recognition)/config/speech.yaml"/>
    <arg name="speech_yaml_list" default="$(find hlpr_speech_recognition)/data/kps.yaml"/>

    <!-- Speech external input (mic or gui) -->
    <arg name="speech_gui" default="true"/>
    <arg name="speech_mic" default="false"/>
    <arg name="speech_dict_path" default="$(find hlpr_speech_recognition)/data/kps.dic" />
    <arg name="speech_kps_path" default="$(find hlpr_speech_recognition)/data/kps.txt" />

    <!-- Lookat service -->
    <arg name="lookat" default="true"/> <!-- Global flag for head control -->
    <arg name="lookat_eef_service" default="false"/> <!-- Compute EEF lookat positions -->
    <arg name="lookat_waypoint_server" default="false"/> <!-- Action server for lookat waypoints -->

    <!-- Kinesthetic Teaching -->
    <arg name="basic_kinesthetic_mode" default="false"/>
    <arg name="basic_kt_folder_loc" default="~/"/>
    <arg name="basic_kt_folder_name" default="kt_data"/>
    <arg name="basic_kt_data_prefix" default="kt_demo"/>
    <arg name="kinesthetic_record" default="false"/>
    <arg name="record_topics" default="$(find hlpr_record_demonstration)/data/topics.yaml"/>

    <!-- Visual Nodes -->

    <!-- NAVIGATION -->
    <group if="$(arg navigation)">
        <!-- Starts up move base and localization nodes -->
        <include file="$(find vector_navigation_apps)/launch/2d_map_nav_demo.launch">
            <arg name="map_file" value="$(arg nav_map)"/>
            <arg name="sim" value="$(arg sim)"/>
        </include>

        <!-- Launch GUI for viewing -->
        <include file="$(find vector_viz)/launch/view_robot.launch" if="$(arg nav_rviz)">
            <arg name="function" value="map_nav"/>
        </include>
    </group>

    <!-- JACO ARM AND GRIPPER-->
    <include file="$(find wpi_jaco_wrapper)/launch/arm.launch" if="$(arg jaco_arm)">
        <arg name="sim" value="$(arg sim)"/>
    </include>
    <node name="gripper_actions" pkg="robotiq_85_gripper_actions" type="gripper_actions" respawn="false" output="screen" if="$(arg gripper_actions)"/>
    <node name="eef_pub" pkg="hlpr_record_demonstration" type="eef_publisher.py" respawn="false" output="screen" if="$(arg pub_eef)">
        <param name="eef_link" value="$(arg eef_link)"/>
    </node>

    <!-- MOVEIT -->
    <group if="$(arg jaco_moveit)">
        <!-- Start moveit -->
        <include file="$(find hlpr_wpi_jaco_moveit_config)/launch/hlpr_wpi_jaco_simple_moveit.launch">
                <arg name="custom_sdf" value="$(find poli_moveit_config)/config/vector.srdf" if="$(arg poli_urdf)"/>
                <arg name="custom_sdf" value="$(find prentice_moveit_config)/config/vector.srdf" if="$(arg prentice_urdf)"/>
                <arg name="use_wpi_jaco_exec" value="true"/>
                <arg name="sim" value="$(arg sim)"/>
                <arg name="use_octomap" value="$(arg use_octomap)"/>
        </include>

        <!-- Start the hlpr_manip_actions -->
        <include file="$(find hlpr_manipulation_actions)/launch/start_manip_actions.launch">
            <arg name="moveit_wrapper" value="$(arg jaco_moveit_wrapper)"/>
            <arg name="primitive_actions" value="$(arg jaco_primitive_actions)"/>
            <arg name="common_actions" value="$(arg jaco_common_actions)"/>
        </include>
    </group>

    <!-- SPEECH -->
    <group if="$(arg speech)">
        <!-- Start speech listener-->
        <include file="$(find hlpr_speech_recognition)/launch/speech_listener.launch">
            <arg name="yaml_list" value="$(arg speech_yaml_list)"/>
            <arg name="config_file" value="$(arg speech_config_file)"/>
        </include>

        <!-- Start speech input (gui)-->
        <node name="speech_input" pkg="hlpr_speech_recognition" type="speech_gui" output="screen" if="$(arg speech_gui)"/>
        <!-- Start speech input (mic)-->
        <include file="$(find hlpr_speech_recognition)/launch/speech_microphone.launch" if="$(arg speech_mic)">
            <arg name="dict_path" value="$(arg speech_dict_path)"/>
            <arg name="kps_path" value="$(arg speech_kps_path)"/>
        </include>
    </group>

    <!-- LOOKAT -->
    <group if="$(arg lookat)">
        <!-- Start the backend IK look service -->
        <include file="$(find hlpr_lookat)/launch/start_lookat_service.launch">
            <arg name="poli_urdf" value="$(arg poli_urdf)"/>
            <arg name="verbose" value="$(arg verbose)"/>
        </include>

        <!-- Start the lookat EEF service -->
        <node name="hlpr_lookat_eef" pkg="hlpr_lookat" type="look_at_eef.py" respawn="false" output="screen" if="$(arg lookat_eef_service)"/>

        <!-- Start a lookat waypoint lookat service -->
        <include file="$(find hlpr_lookat)/launch/waypoint_action_server.launch" if="$(arg lookat_waypoint_server)">
            <arg name="verbose" value="$(arg verbose)"/>
        </include>
    </group>

    <!-- KINESTHETIC SERVICES -->
    <!-- Actual voice commands for robot control -->
    <include file="$(find hlpr_kinesthetic_interaction)/launch/start_kinesthetic_mode.launch" if="$(arg basic_kinesthetic_mode)">
        <arg name="data_folder_loc" value="$(arg basic_kt_folder_loc)"/>
        <arg name="data_folder_name" value="$(arg basic_kt_folder_name)"/>
        <arg name="data_prefix" value="$(arg basic_kt_data_prefix)"/>
    </include> 
    
    <!-- Recording bag topics for playback -->
    <include file="$(find hlpr_record_demonstration)/launch/start_record_services.launch" if="$(arg kinesthetic_record)">
        <arg name="eef_link" value="$(arg eef_link)"/>
        <arg name="topic_loc" value="$(arg record_topics)"/>
        <arg name="start_eef_pub" value="false"/>
    </include>



</launch>
